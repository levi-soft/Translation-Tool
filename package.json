{
  "name": "game-text-translator",
  "displayName": "Game Text Translator",
  "description": "VSCode extension to translate game text files with AI support",
  "version": "0.0.1",
  "publisher": "your-publisher-name",
  "repository": {
    "type": "git",
    "url": "https://github.com/your-username/game-text-translator.git"
  },
  "engines": {
    "vscode": "^1.74.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onCommand:gameTextTranslator.translateSelection"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "gameTextTranslator.translateSelection",
        "title": "Translate Selection"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "gameTextTranslator.translateSelection",
          "when": "editorHasSelection"
        }
      ],
      "commandPalette": [
        {
          "command": "gameTextTranslator.translateSelection"
        }
      ]
    },
    "configuration": {
      "title": "Game Text Translator",
      "properties": {
        "gameTextTranslator.sourceLanguage": {
          "type": "string",
          "default": "en",
          "description": "Source language code (e.g., en, ja, zh)"
        },
        "gameTextTranslator.targetLanguage": {
          "type": "string",
          "default": "vi",
          "description": "Target language code (e.g., vi, en, zh)"
        },
        "gameTextTranslator.translationProvider": {
          "type": "string",
          "enum": [
            "googleTranslate",
            "libreTranslate",
            "openRouter",
            "openAI",
            "googleCloud"
          ],
          "default": "googleTranslate",
          "description": "Translation service provider"
        },
        "gameTextTranslator.openRouterApiKey": {
          "type": "string",
          "description": "OpenRouter API key"
        },
        "gameTextTranslator.openRouterModel": {
          "type": "string",
          "enum": [
            "anthropic/claude-3-haiku",
            "anthropic/claude-3-sonnet",
            "anthropic/claude-3-opus",
            "openai/gpt-4o",
            "openai/gpt-4o-mini",
            "openai/gpt-4-turbo",
            "openai/gpt-4.1",
            "openai/gpt-4.1-mini",
            "openai/gpt-5",
            "openai/gpt-5-mini",
            "openai/gpt-3.5-turbo",
            "google/gemini-pro",
            "google/gemini-flash",
            "meta-llama/llama-3-70b-instruct",
            "meta-llama/llama-3-8b-instruct"
          ],
          "default": "anthropic/claude-3-haiku",
          "description": "OpenRouter AI model for translation"
        },
        "gameTextTranslator.openAIApiKey": {
          "type": "string",
          "description": "OpenAI API key"
        },
        "gameTextTranslator.googleCloudApiKey": {
          "type": "string",
          "description": "Google Cloud Translation API key"
        },
        "gameTextTranslator.systemPrompt": {
          "type": "string",
          "default": "You are a professional Vietnamese game translator specializing in video game localization.\n\nYour task is to translate game text from English to Vietnamese naturally and accurately.\n\nGuidelines:\n- Maintain the original tone and style of the game text\n- Use appropriate gaming terminology and slang\n- Keep cultural references intact when possible\n- Ensure translations fit the character limit if specified\n- Preserve any special formatting or placeholders\n- Make translations sound natural to Vietnamese gamers\n\nTranslate the following text:",
          "description": "System prompt for AI translation",
          "editPresentation": "multilineText"
        },
        "gameTextTranslator.vocabulary": {
          "type": "object",
          "default": {},
          "description": "Custom vocabulary dictionary (key: original, value: translation)"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "package": "npm run compile && vsce package",
    "publish": "npm run compile && vsce publish"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/papaparse": "^5.3.16",
    "@types/vscode": "^1.74.0",
    "@vscode/test-electron": "^2.2.0",
    "eslint": "^8.28.0",
    "glob": "^8.1.0",
    "mocha": "^10.1.0",
    "typescript": "^4.9.4"
  },
  "dependencies": {}
}
